admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      protocol: TCP
      address: 0.0.0.0
      port_value: 9901

node:
  id: id_1
  cluster: test

dynamic_resources:
  cds_config:
    path: /etc/envoy/cds.yaml
  lds_config:
    path: /etc/envoy/lds.yaml

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address:
        protocol: TCP
        address: 0.0.0.0
        port_value: 8081
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          access_log:
          - name: envoy.access_loggers.stdout
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
              log_format:
                formatters:
                  - name: "req_without_query"
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.formatter.req_without_query.v3.ReqWithoutQuery
                json_format:
                  version: "1"
                  app: '%HOSTNAME%'
                  env: "%DYNAMIC_METADATA(envoy.filters.http.lua:clusterInfo:cluster)%"
                  cluster: "%DYNAMIC_METADATA(envoy.filters.http.lua:clusterInfo:cluster)%"
                  localAddress: "%UPSTREAM_LOCAL_ADDRESS%"
                  remoteAddress: "%DOWNSTREAM_REMOTE_ADDRESS%"
                  remoteApp: lixiang-cloud
                  traceId: '%REQ(x-request-id?x-b3-traceid)%'
                  thread: '-'
                  uri: "%REQ(:PATH)%"
                  uriPattern: "%REQ_WITHOUT_QUERY(:PATH)%"
                  method: "%REQ(:METHOD)%"
                  requestHeaders: ''
                  responseHeaders: ''
                  exception: ''
                  errorMessage: ''
                  startTime: '%START_TIME%'
                  endTime: '2021-09-07T09:47:08.911+08:00'
                  cost: "%DURATION%"
                  status: "%RESPONSE_CODE%"
                  internalStatus: ''
                  query: "%DYNAMIC_METADATA(envoy.filters.http.lua:query)%"
                  requestBody: '-'
                  responseBody: "%LOCAL_REPLY_BODY%"
          - name: envoy.access_loggers.file
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.access_loggers.file.v3.FileAccessLog
              path: "/dev/stdout"
          http_filters:
          - name: envoy.filters.http.lua
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
              inline_code: |
                function envoy_on_request(request_handle)
                  timestamp = request_handle:timestamp()
                  request_handle:streamInfo():dynamicMetadata():set("envoy.filters.http.lua", "sts", timestamp)

                  local uri = request_handle:headers():get(":path")
                  local idx = string.find(uri, "?")
                  if idx ~= nil then
                    local query = string.sub(uri, idx+1)
                    request_handle:streamInfo():dynamicMetadata():set("envoy.filters.http.lua", "query", query)
                  end
                
                  request_handle:streamInfo():dynamicMetadata():set("envoy.filters.http.lua", "clusterInfo", {
                      cluster = os.getenv("HOME"),
                      env = os.getenv("HOME"),
                  })
                end
                
                function envoy_on_response(response_handle)
                  sts = response_handle:streamInfo():dynamicMetadata():get("envoy.filters.http.lua")["sts"]
                  ets = response_handle:timestamp()
                  response_handle:logInfo(sts)
                  response_handle:logInfo(ets)
                  response_handle:logInfo(ets-sts)
                  ts = response_handle:timestamp()
                  response_handle:logInfo(string.format("%s.%sZ", os.date("%Y-%m-%dT%H:%M:%S",ts/1000), string.sub(tostring(ts), string.len(ts)-2)))
                end
          - name: envoy.filters.http.router
          route_config:
            name: local_route
            virtual_hosts:
            - name: saltbo
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                route:
                  host_rewrite_literal: saltbo.cn
                  cluster: saltbo
# 2021-09-07T09:47:08.911+08:00
  
  clusters:
  - name: saltbo
    type: LOGICAL_DNS
    dns_lookup_family: V4_ONLY
    load_assignment:
      cluster_name: saltbo
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: saltbo.cn
                port_value: 80

                  
# dynamic_resources:
#   cds_config:
#     api_config_source:
#       api_type: GRPC
#       grpc_services:
#         envoy_grpc:
#           cluster_name: xds_cluster
#   lds_config:
#     api_config_source:
#       api_type: GRPC
#       grpc_services:
#         envoy_grpc:
#           cluster_name: xds_cluster
# static_resources:
#   clusters:
#   - name: xds_cluster
#     connect_timeout: 0.25s
#     type: STRICT_DNS
#     lb_policy: ROUND_ROBIN
#     http2_protocol_options: {}
#     load_assignment:
#       cluster_name: xds_cluster
#       endpoints:
#       - lb_endpoints:
#         - endpoint:
#             address:
#               socket_address:
#                 address: docker.for.mac.localhost
#                 port_value: 9001
